"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import pet as shared_pet
from enum import Enum
from typing import Optional



@dataclasses.dataclass
class FindPetsByStatusSecurity:
    petstore_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})
    


class FindPetsByStatusStatus(str, Enum):
    r"""Status values that need to be considered for filter"""
    AVAILABLE = 'available'
    PENDING = 'pending'
    SOLD = 'sold'



@dataclasses.dataclass
class FindPetsByStatusRequest:
    status: Optional[FindPetsByStatusStatus] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Status values that need to be considered for filter"""
    




@dataclasses.dataclass
class FindPetsByStatusResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    body: Optional[bytes] = dataclasses.field(default=None)
    pets: Optional[list[shared_pet.Pet]] = dataclasses.field(default=None)
    r"""successful operation"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    

